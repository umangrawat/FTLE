CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(FTLECUDAv4)
SET (CMAKE_CXX_STANDARD 11)
set(CMAKE_BUILD_TYPE RELAESE)
#set(CMAKE_BUILD_TYPE DEBUG)
#set(CMAKE_CXX_FLAGS_RELEASE "-O2")
#Remember to remove
#Set(CMAKE_VERBOSE_MAKEFILE ON)


find_package(CUDA REQUIRED)
CUDA_INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
CUDA_INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../libs/linalg)


CUDA_ADD_LIBRARY(cudaIntegrator SHARED cudaIntegrator.cu
		OPTIONS -arch=sm_50 --pre-include  cudaIntegrator.h)


# needed for compiling CUDA on Ubuntu 16.04
set(${CMAKE_CXX_FLAGS} "-D_FORCE_INLINES ${CMAKE_CXX_FLAGS}")
#SET(CMAKE_BUILD_TYPE Debug)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../libs/linalg)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../catch)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)

SET(MASTER_BUILD FALSE)
IF(NOT MASTER_BUILD)
	IF (ParaView_SOURCE_DIR)
		INCLUDE_DIRECTORIES(
				${VTK_INCLUDE_DIRS}
		)
	ELSE (ParaView_SOURCE_DIR)
		FIND_PACKAGE(ParaView REQUIRED)
		INCLUDE(${PARAVIEW_USE_FILE})
	ENDIF (ParaView_SOURCE_DIR)
ENDIF(NOT MASTER_BUILD)

ADD_PARAVIEW_PLUGIN(FTLECUDAv4 "1.0"
		SERVER_MANAGER_XML
		FTLE_Server.xml
		SERVER_MANAGER_SOURCES
		vtkFTLE.cxx
		SOURCES Integrator.h Integrator.cxx
		)
TARGET_COMPILE_DEFINITIONS(FTLECUDAv4 PUBLIC UNITTEST=0 CPUEXEC=0)

ADD_PARAVIEW_PLUGIN(FTLECUDACPUv4 "1.0"
		SERVER_MANAGER_XML
		FTLE_Server.xml
		SERVER_MANAGER_SOURCES
		vtkFTLE.cxx
		SOURCES Integrator.h Integrator.cxx cudaIntegrator.h cudaIntegrator.cu
		)
TARGET_COMPILE_DEFINITIONS(FTLECUDACPUv4 PUBLIC UNITTEST=0 CPUEXEC=1)



target_compile_definitions(FTLECUDAv4 PUBLIC UNITTEST=0)
TARGET_LINK_LIBRARIES(FTLECUDAv4 PRIVATE cudaIntegrator )

INSTALL( TARGETS ${PROJECT_NAME} CONFIGURATIONS Release
                                 RUNTIME DESTINATION bin/Release
                                 LIBRARY DESTINATION bin/Release
                                 )

INSTALL( TARGETS ${PROJECT_NAME} CONFIGURATIONS Debug
                                 RUNTIME DESTINATION bin/Debug
                                 LIBRARY DESTINATION bin/Debug
                                 )
INSTALL( TARGETS ${PROJECT_NAME} CONFIGURATIONS RelWithDebInfo RUNTIME DESTINATION bin/RelWithDebInfo LIBRARY DESTINATION bin/RelWithDebInfo )


SET(SOURCE_FILES Integrator.cxx vtkFTLE.cxx cudaIntegrator.cxx )
file(GLOB_RECURSE TEST_SOURCE RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}"
		"tests/*.h" "tests/*.cxx" )

add_executable (Tests ${TEST_SOURCE} ${SOURCE_FILES})
target_compile_definitions(Tests PUBLIC UNITTEST=1)
#TARGET_LINK_LIBRARIES(Tests  cudaIntegrator_Test)
TARGET_LINK_LIBRARIES(Tests  ${PARAVIEW_LIBRARIES} ${VTK_LIBRARIES})
TARGET_LINK_LIBRARIES(Tests  pqComponents)
target_include_directories(Tests INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/../../catch
		${VTK_INCLUDE_DIRS} ${PARAVIEW_USE_FILE} ${PARAVIEW_INCLUDE_DIRS})